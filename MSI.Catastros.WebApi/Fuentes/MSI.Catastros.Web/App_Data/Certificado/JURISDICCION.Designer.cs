//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace MSI.Catastros.Web.App_Data.Certificado {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("JURISDICCION")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class JURISDICCION : global::System.Data.DataSet {
        
        private DatosJurisdiccionDataTable tableDatosJurisdiccion;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JURISDICCION() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected JURISDICCION(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["DatosJurisdiccion"] != null)) {
                    base.Tables.Add(new DatosJurisdiccionDataTable(ds.Tables["DatosJurisdiccion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DatosJurisdiccionDataTable DatosJurisdiccion {
            get {
                return this.tableDatosJurisdiccion;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            JURISDICCION cln = ((JURISDICCION)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["DatosJurisdiccion"] != null)) {
                    base.Tables.Add(new DatosJurisdiccionDataTable(ds.Tables["DatosJurisdiccion"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableDatosJurisdiccion = ((DatosJurisdiccionDataTable)(base.Tables["DatosJurisdiccion"]));
            if ((initTable == true)) {
                if ((this.tableDatosJurisdiccion != null)) {
                    this.tableDatosJurisdiccion.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "JURISDICCION";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/JURISDICCION.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableDatosJurisdiccion = new DatosJurisdiccionDataTable();
            base.Tables.Add(this.tableDatosJurisdiccion);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDatosJurisdiccion() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            JURISDICCION ds = new JURISDICCION();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DatosJurisdiccionRowChangeEventHandler(object sender, DatosJurisdiccionRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DatosJurisdiccionDataTable : global::System.Data.TypedTableBase<DatosJurisdiccionRow> {
            
            private global::System.Data.DataColumn columnCODCERTIFICADO;
            
            private global::System.Data.DataColumn columnCODANOCERTI;
            
            private global::System.Data.DataColumn columnCODANOSOLI;
            
            private global::System.Data.DataColumn columnCODNUMESOLI;
            
            private global::System.Data.DataColumn columnTXTTIPOLLENADO;
            
            private global::System.Data.DataColumn columnTXTDETALLE;
            
            private global::System.Data.DataColumn columnCODTIPOSOLI;
            
            private global::System.Data.DataColumn columnCODOFICINA;
            
            private global::System.Data.DataColumn columnTXTSIGLA;
            
            private global::System.Data.DataColumn columnCODTIPOCERTI;
            
            private global::System.Data.DataColumn columnCTIPODOCUMENTO;
            
            private global::System.Data.DataColumn columnCODCARCAT;
            
            private global::System.Data.DataColumn columnCODUSUASIS;
            
            private global::System.Data.DataColumn columnCODPERSONA;
            
            private global::System.Data.DataColumn columnTXTUNIDAD;
            
            private global::System.Data.DataColumn columnTXTUNIDADDIREC;
            
            private global::System.Data.DataColumn columnTXTUNIDADTITULAR;
            
            private global::System.Data.DataColumn columnTXTSOLICITANTE;
            
            private global::System.Data.DataColumn columnTXTDIRECCION;
            
            private global::System.Data.DataColumn columnTXTCODTIPOSOLI;
            
            private global::System.Data.DataColumn columnTXTPARTIDA;
            
            private global::System.Data.DataColumn columnTXTCODHOJACATAS;
            
            private global::System.Data.DataColumn columnTXTCODIGOUNICO;
            
            private global::System.Data.DataColumn columnFECACTUAL;
            
            private global::System.Data.DataColumn columnTXTURBANIZACION;
            
            private global::System.Data.DataColumn columnTXTPARTIDACODIGO;
            
            private global::System.Data.DataColumn columnTXTUNIDADGUION;
            
            private global::System.Data.DataColumn columnCODCATASTRAL;
            
            private global::System.Data.DataColumn columnRUTAFOTO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DatosJurisdiccionDataTable() {
                this.TableName = "DatosJurisdiccion";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DatosJurisdiccionDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DatosJurisdiccionDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODCERTIFICADOColumn {
                get {
                    return this.columnCODCERTIFICADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODANOCERTIColumn {
                get {
                    return this.columnCODANOCERTI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODANOSOLIColumn {
                get {
                    return this.columnCODANOSOLI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODNUMESOLIColumn {
                get {
                    return this.columnCODNUMESOLI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTTIPOLLENADOColumn {
                get {
                    return this.columnTXTTIPOLLENADO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTDETALLEColumn {
                get {
                    return this.columnTXTDETALLE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODTIPOSOLIColumn {
                get {
                    return this.columnCODTIPOSOLI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODOFICINAColumn {
                get {
                    return this.columnCODOFICINA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTSIGLAColumn {
                get {
                    return this.columnTXTSIGLA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODTIPOCERTIColumn {
                get {
                    return this.columnCODTIPOCERTI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CTIPODOCUMENTOColumn {
                get {
                    return this.columnCTIPODOCUMENTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODCARCATColumn {
                get {
                    return this.columnCODCARCAT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODUSUASISColumn {
                get {
                    return this.columnCODUSUASIS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODPERSONAColumn {
                get {
                    return this.columnCODPERSONA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTUNIDADColumn {
                get {
                    return this.columnTXTUNIDAD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTUNIDADDIRECColumn {
                get {
                    return this.columnTXTUNIDADDIREC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTUNIDADTITULARColumn {
                get {
                    return this.columnTXTUNIDADTITULAR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTSOLICITANTEColumn {
                get {
                    return this.columnTXTSOLICITANTE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTDIRECCIONColumn {
                get {
                    return this.columnTXTDIRECCION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTCODTIPOSOLIColumn {
                get {
                    return this.columnTXTCODTIPOSOLI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTPARTIDAColumn {
                get {
                    return this.columnTXTPARTIDA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTCODHOJACATASColumn {
                get {
                    return this.columnTXTCODHOJACATAS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTCODIGOUNICOColumn {
                get {
                    return this.columnTXTCODIGOUNICO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FECACTUALColumn {
                get {
                    return this.columnFECACTUAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTURBANIZACIONColumn {
                get {
                    return this.columnTXTURBANIZACION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTPARTIDACODIGOColumn {
                get {
                    return this.columnTXTPARTIDACODIGO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TXTUNIDADGUIONColumn {
                get {
                    return this.columnTXTUNIDADGUION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CODCATASTRALColumn {
                get {
                    return this.columnCODCATASTRAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RUTAFOTOColumn {
                get {
                    return this.columnRUTAFOTO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DatosJurisdiccionRow this[int index] {
                get {
                    return ((DatosJurisdiccionRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DatosJurisdiccionRowChangeEventHandler DatosJurisdiccionRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DatosJurisdiccionRowChangeEventHandler DatosJurisdiccionRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DatosJurisdiccionRowChangeEventHandler DatosJurisdiccionRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DatosJurisdiccionRowChangeEventHandler DatosJurisdiccionRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDatosJurisdiccionRow(DatosJurisdiccionRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DatosJurisdiccionRow AddDatosJurisdiccionRow(
                        string CODCERTIFICADO, 
                        string CODANOCERTI, 
                        string CODANOSOLI, 
                        string CODNUMESOLI, 
                        string TXTTIPOLLENADO, 
                        string TXTDETALLE, 
                        string CODTIPOSOLI, 
                        string CODOFICINA, 
                        string TXTSIGLA, 
                        string CODTIPOCERTI, 
                        string CTIPODOCUMENTO, 
                        string CODCARCAT, 
                        string CODUSUASIS, 
                        string CODPERSONA, 
                        string TXTUNIDAD, 
                        string TXTUNIDADDIREC, 
                        string TXTUNIDADTITULAR, 
                        string TXTSOLICITANTE, 
                        string TXTDIRECCION, 
                        string TXTCODTIPOSOLI, 
                        string TXTPARTIDA, 
                        string TXTCODHOJACATAS, 
                        string TXTCODIGOUNICO, 
                        string FECACTUAL, 
                        string TXTURBANIZACION, 
                        string TXTPARTIDACODIGO, 
                        string TXTUNIDADGUION, 
                        string CODCATASTRAL, 
                        string RUTAFOTO) {
                DatosJurisdiccionRow rowDatosJurisdiccionRow = ((DatosJurisdiccionRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CODCERTIFICADO,
                        CODANOCERTI,
                        CODANOSOLI,
                        CODNUMESOLI,
                        TXTTIPOLLENADO,
                        TXTDETALLE,
                        CODTIPOSOLI,
                        CODOFICINA,
                        TXTSIGLA,
                        CODTIPOCERTI,
                        CTIPODOCUMENTO,
                        CODCARCAT,
                        CODUSUASIS,
                        CODPERSONA,
                        TXTUNIDAD,
                        TXTUNIDADDIREC,
                        TXTUNIDADTITULAR,
                        TXTSOLICITANTE,
                        TXTDIRECCION,
                        TXTCODTIPOSOLI,
                        TXTPARTIDA,
                        TXTCODHOJACATAS,
                        TXTCODIGOUNICO,
                        FECACTUAL,
                        TXTURBANIZACION,
                        TXTPARTIDACODIGO,
                        TXTUNIDADGUION,
                        CODCATASTRAL,
                        RUTAFOTO};
                rowDatosJurisdiccionRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDatosJurisdiccionRow);
                return rowDatosJurisdiccionRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DatosJurisdiccionDataTable cln = ((DatosJurisdiccionDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DatosJurisdiccionDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnCODCERTIFICADO = base.Columns["CODCERTIFICADO"];
                this.columnCODANOCERTI = base.Columns["CODANOCERTI"];
                this.columnCODANOSOLI = base.Columns["CODANOSOLI"];
                this.columnCODNUMESOLI = base.Columns["CODNUMESOLI"];
                this.columnTXTTIPOLLENADO = base.Columns["TXTTIPOLLENADO"];
                this.columnTXTDETALLE = base.Columns["TXTDETALLE"];
                this.columnCODTIPOSOLI = base.Columns["CODTIPOSOLI"];
                this.columnCODOFICINA = base.Columns["CODOFICINA"];
                this.columnTXTSIGLA = base.Columns["TXTSIGLA"];
                this.columnCODTIPOCERTI = base.Columns["CODTIPOCERTI"];
                this.columnCTIPODOCUMENTO = base.Columns["CTIPODOCUMENTO"];
                this.columnCODCARCAT = base.Columns["CODCARCAT"];
                this.columnCODUSUASIS = base.Columns["CODUSUASIS"];
                this.columnCODPERSONA = base.Columns["CODPERSONA"];
                this.columnTXTUNIDAD = base.Columns["TXTUNIDAD"];
                this.columnTXTUNIDADDIREC = base.Columns["TXTUNIDADDIREC"];
                this.columnTXTUNIDADTITULAR = base.Columns["TXTUNIDADTITULAR"];
                this.columnTXTSOLICITANTE = base.Columns["TXTSOLICITANTE"];
                this.columnTXTDIRECCION = base.Columns["TXTDIRECCION"];
                this.columnTXTCODTIPOSOLI = base.Columns["TXTCODTIPOSOLI"];
                this.columnTXTPARTIDA = base.Columns["TXTPARTIDA"];
                this.columnTXTCODHOJACATAS = base.Columns["TXTCODHOJACATAS"];
                this.columnTXTCODIGOUNICO = base.Columns["TXTCODIGOUNICO"];
                this.columnFECACTUAL = base.Columns["FECACTUAL"];
                this.columnTXTURBANIZACION = base.Columns["TXTURBANIZACION"];
                this.columnTXTPARTIDACODIGO = base.Columns["TXTPARTIDACODIGO"];
                this.columnTXTUNIDADGUION = base.Columns["TXTUNIDADGUION"];
                this.columnCODCATASTRAL = base.Columns["CODCATASTRAL"];
                this.columnRUTAFOTO = base.Columns["RUTAFOTO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnCODCERTIFICADO = new global::System.Data.DataColumn("CODCERTIFICADO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODCERTIFICADO);
                this.columnCODANOCERTI = new global::System.Data.DataColumn("CODANOCERTI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODANOCERTI);
                this.columnCODANOSOLI = new global::System.Data.DataColumn("CODANOSOLI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODANOSOLI);
                this.columnCODNUMESOLI = new global::System.Data.DataColumn("CODNUMESOLI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODNUMESOLI);
                this.columnTXTTIPOLLENADO = new global::System.Data.DataColumn("TXTTIPOLLENADO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTTIPOLLENADO);
                this.columnTXTDETALLE = new global::System.Data.DataColumn("TXTDETALLE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTDETALLE);
                this.columnCODTIPOSOLI = new global::System.Data.DataColumn("CODTIPOSOLI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODTIPOSOLI);
                this.columnCODOFICINA = new global::System.Data.DataColumn("CODOFICINA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODOFICINA);
                this.columnTXTSIGLA = new global::System.Data.DataColumn("TXTSIGLA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTSIGLA);
                this.columnCODTIPOCERTI = new global::System.Data.DataColumn("CODTIPOCERTI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODTIPOCERTI);
                this.columnCTIPODOCUMENTO = new global::System.Data.DataColumn("CTIPODOCUMENTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTIPODOCUMENTO);
                this.columnCODCARCAT = new global::System.Data.DataColumn("CODCARCAT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODCARCAT);
                this.columnCODUSUASIS = new global::System.Data.DataColumn("CODUSUASIS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODUSUASIS);
                this.columnCODPERSONA = new global::System.Data.DataColumn("CODPERSONA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODPERSONA);
                this.columnTXTUNIDAD = new global::System.Data.DataColumn("TXTUNIDAD", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTUNIDAD);
                this.columnTXTUNIDADDIREC = new global::System.Data.DataColumn("TXTUNIDADDIREC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTUNIDADDIREC);
                this.columnTXTUNIDADTITULAR = new global::System.Data.DataColumn("TXTUNIDADTITULAR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTUNIDADTITULAR);
                this.columnTXTSOLICITANTE = new global::System.Data.DataColumn("TXTSOLICITANTE", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTSOLICITANTE);
                this.columnTXTDIRECCION = new global::System.Data.DataColumn("TXTDIRECCION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTDIRECCION);
                this.columnTXTCODTIPOSOLI = new global::System.Data.DataColumn("TXTCODTIPOSOLI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTCODTIPOSOLI);
                this.columnTXTPARTIDA = new global::System.Data.DataColumn("TXTPARTIDA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTPARTIDA);
                this.columnTXTCODHOJACATAS = new global::System.Data.DataColumn("TXTCODHOJACATAS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTCODHOJACATAS);
                this.columnTXTCODIGOUNICO = new global::System.Data.DataColumn("TXTCODIGOUNICO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTCODIGOUNICO);
                this.columnFECACTUAL = new global::System.Data.DataColumn("FECACTUAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFECACTUAL);
                this.columnTXTURBANIZACION = new global::System.Data.DataColumn("TXTURBANIZACION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTURBANIZACION);
                this.columnTXTPARTIDACODIGO = new global::System.Data.DataColumn("TXTPARTIDACODIGO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTPARTIDACODIGO);
                this.columnTXTUNIDADGUION = new global::System.Data.DataColumn("TXTUNIDADGUION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXTUNIDADGUION);
                this.columnCODCATASTRAL = new global::System.Data.DataColumn("CODCATASTRAL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCODCATASTRAL);
                this.columnRUTAFOTO = new global::System.Data.DataColumn("RUTAFOTO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRUTAFOTO);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DatosJurisdiccionRow NewDatosJurisdiccionRow() {
                return ((DatosJurisdiccionRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DatosJurisdiccionRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DatosJurisdiccionRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DatosJurisdiccionRowChanged != null)) {
                    this.DatosJurisdiccionRowChanged(this, new DatosJurisdiccionRowChangeEvent(((DatosJurisdiccionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DatosJurisdiccionRowChanging != null)) {
                    this.DatosJurisdiccionRowChanging(this, new DatosJurisdiccionRowChangeEvent(((DatosJurisdiccionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DatosJurisdiccionRowDeleted != null)) {
                    this.DatosJurisdiccionRowDeleted(this, new DatosJurisdiccionRowChangeEvent(((DatosJurisdiccionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DatosJurisdiccionRowDeleting != null)) {
                    this.DatosJurisdiccionRowDeleting(this, new DatosJurisdiccionRowChangeEvent(((DatosJurisdiccionRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDatosJurisdiccionRow(DatosJurisdiccionRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                JURISDICCION ds = new JURISDICCION();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DatosJurisdiccionDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DatosJurisdiccionRow : global::System.Data.DataRow {
            
            private DatosJurisdiccionDataTable tableDatosJurisdiccion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DatosJurisdiccionRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDatosJurisdiccion = ((DatosJurisdiccionDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODCERTIFICADO {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODCERTIFICADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODCERTIFICADO\' de la tabla \'DatosJurisdiccion\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODCERTIFICADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODANOCERTI {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODANOCERTIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODANOCERTI\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODANOCERTIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODANOSOLI {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODANOSOLIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODANOSOLI\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODANOSOLIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODNUMESOLI {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODNUMESOLIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODNUMESOLI\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODNUMESOLIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTTIPOLLENADO {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTTIPOLLENADOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTTIPOLLENADO\' de la tabla \'DatosJurisdiccion\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTTIPOLLENADOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTDETALLE {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTDETALLEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTDETALLE\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTDETALLEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODTIPOSOLI {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODTIPOSOLIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODTIPOSOLI\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODTIPOSOLIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODOFICINA {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODOFICINAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODOFICINA\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODOFICINAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTSIGLA {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTSIGLAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTSIGLA\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTSIGLAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODTIPOCERTI {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODTIPOCERTIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODTIPOCERTI\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODTIPOCERTIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CTIPODOCUMENTO {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CTIPODOCUMENTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CTIPODOCUMENTO\' de la tabla \'DatosJurisdiccion\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CTIPODOCUMENTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODCARCAT {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODCARCATColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODCARCAT\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODCARCATColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODUSUASIS {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODUSUASISColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODUSUASIS\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODUSUASISColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODPERSONA {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODPERSONAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODPERSONA\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODPERSONAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTUNIDAD {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTUNIDADColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTUNIDAD\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTUNIDADColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTUNIDADDIREC {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTUNIDADDIRECColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTUNIDADDIREC\' de la tabla \'DatosJurisdiccion\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTUNIDADDIRECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTUNIDADTITULAR {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTUNIDADTITULARColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTUNIDADTITULAR\' de la tabla \'DatosJurisdiccion\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTUNIDADTITULARColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTSOLICITANTE {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTSOLICITANTEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTSOLICITANTE\' de la tabla \'DatosJurisdiccion\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTSOLICITANTEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTDIRECCION {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTDIRECCIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTDIRECCION\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTDIRECCIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTCODTIPOSOLI {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTCODTIPOSOLIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTCODTIPOSOLI\' de la tabla \'DatosJurisdiccion\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTCODTIPOSOLIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTPARTIDA {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTPARTIDAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTPARTIDA\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTPARTIDAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTCODHOJACATAS {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTCODHOJACATASColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTCODHOJACATAS\' de la tabla \'DatosJurisdiccion\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTCODHOJACATASColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTCODIGOUNICO {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTCODIGOUNICOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTCODIGOUNICO\' de la tabla \'DatosJurisdiccion\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTCODIGOUNICOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FECACTUAL {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.FECACTUALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'FECACTUAL\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.FECACTUALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTURBANIZACION {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTURBANIZACIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTURBANIZACION\' de la tabla \'DatosJurisdiccion\' es DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTURBANIZACIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTPARTIDACODIGO {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTPARTIDACODIGOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTPARTIDACODIGO\' de la tabla \'DatosJurisdiccion\' es DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTPARTIDACODIGOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TXTUNIDADGUION {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.TXTUNIDADGUIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'TXTUNIDADGUION\' de la tabla \'DatosJurisdiccion\' es DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.TXTUNIDADGUIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CODCATASTRAL {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.CODCATASTRALColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'CODCATASTRAL\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.CODCATASTRALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RUTAFOTO {
                get {
                    try {
                        return ((string)(this[this.tableDatosJurisdiccion.RUTAFOTOColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("El valor de la columna \'RUTAFOTO\' de la tabla \'DatosJurisdiccion\' es DBNull.", e);
                    }
                }
                set {
                    this[this.tableDatosJurisdiccion.RUTAFOTOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODCERTIFICADONull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODCERTIFICADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODCERTIFICADONull() {
                this[this.tableDatosJurisdiccion.CODCERTIFICADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODANOCERTINull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODANOCERTIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODANOCERTINull() {
                this[this.tableDatosJurisdiccion.CODANOCERTIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODANOSOLINull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODANOSOLIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODANOSOLINull() {
                this[this.tableDatosJurisdiccion.CODANOSOLIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODNUMESOLINull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODNUMESOLIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODNUMESOLINull() {
                this[this.tableDatosJurisdiccion.CODNUMESOLIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTTIPOLLENADONull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTTIPOLLENADOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTTIPOLLENADONull() {
                this[this.tableDatosJurisdiccion.TXTTIPOLLENADOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTDETALLENull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTDETALLEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTDETALLENull() {
                this[this.tableDatosJurisdiccion.TXTDETALLEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODTIPOSOLINull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODTIPOSOLIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODTIPOSOLINull() {
                this[this.tableDatosJurisdiccion.CODTIPOSOLIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODOFICINANull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODOFICINAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODOFICINANull() {
                this[this.tableDatosJurisdiccion.CODOFICINAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTSIGLANull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTSIGLAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTSIGLANull() {
                this[this.tableDatosJurisdiccion.TXTSIGLAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODTIPOCERTINull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODTIPOCERTIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODTIPOCERTINull() {
                this[this.tableDatosJurisdiccion.CODTIPOCERTIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCTIPODOCUMENTONull() {
                return this.IsNull(this.tableDatosJurisdiccion.CTIPODOCUMENTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCTIPODOCUMENTONull() {
                this[this.tableDatosJurisdiccion.CTIPODOCUMENTOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODCARCATNull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODCARCATColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODCARCATNull() {
                this[this.tableDatosJurisdiccion.CODCARCATColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODUSUASISNull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODUSUASISColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODUSUASISNull() {
                this[this.tableDatosJurisdiccion.CODUSUASISColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODPERSONANull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODPERSONAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODPERSONANull() {
                this[this.tableDatosJurisdiccion.CODPERSONAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTUNIDADNull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTUNIDADColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTUNIDADNull() {
                this[this.tableDatosJurisdiccion.TXTUNIDADColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTUNIDADDIRECNull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTUNIDADDIRECColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTUNIDADDIRECNull() {
                this[this.tableDatosJurisdiccion.TXTUNIDADDIRECColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTUNIDADTITULARNull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTUNIDADTITULARColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTUNIDADTITULARNull() {
                this[this.tableDatosJurisdiccion.TXTUNIDADTITULARColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTSOLICITANTENull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTSOLICITANTEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTSOLICITANTENull() {
                this[this.tableDatosJurisdiccion.TXTSOLICITANTEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTDIRECCIONNull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTDIRECCIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTDIRECCIONNull() {
                this[this.tableDatosJurisdiccion.TXTDIRECCIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTCODTIPOSOLINull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTCODTIPOSOLIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTCODTIPOSOLINull() {
                this[this.tableDatosJurisdiccion.TXTCODTIPOSOLIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTPARTIDANull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTPARTIDAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTPARTIDANull() {
                this[this.tableDatosJurisdiccion.TXTPARTIDAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTCODHOJACATASNull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTCODHOJACATASColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTCODHOJACATASNull() {
                this[this.tableDatosJurisdiccion.TXTCODHOJACATASColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTCODIGOUNICONull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTCODIGOUNICOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTCODIGOUNICONull() {
                this[this.tableDatosJurisdiccion.TXTCODIGOUNICOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFECACTUALNull() {
                return this.IsNull(this.tableDatosJurisdiccion.FECACTUALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFECACTUALNull() {
                this[this.tableDatosJurisdiccion.FECACTUALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTURBANIZACIONNull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTURBANIZACIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTURBANIZACIONNull() {
                this[this.tableDatosJurisdiccion.TXTURBANIZACIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTPARTIDACODIGONull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTPARTIDACODIGOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTPARTIDACODIGONull() {
                this[this.tableDatosJurisdiccion.TXTPARTIDACODIGOColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTXTUNIDADGUIONNull() {
                return this.IsNull(this.tableDatosJurisdiccion.TXTUNIDADGUIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTXTUNIDADGUIONNull() {
                this[this.tableDatosJurisdiccion.TXTUNIDADGUIONColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCODCATASTRALNull() {
                return this.IsNull(this.tableDatosJurisdiccion.CODCATASTRALColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCODCATASTRALNull() {
                this[this.tableDatosJurisdiccion.CODCATASTRALColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRUTAFOTONull() {
                return this.IsNull(this.tableDatosJurisdiccion.RUTAFOTOColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRUTAFOTONull() {
                this[this.tableDatosJurisdiccion.RUTAFOTOColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DatosJurisdiccionRowChangeEvent : global::System.EventArgs {
            
            private DatosJurisdiccionRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DatosJurisdiccionRowChangeEvent(DatosJurisdiccionRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DatosJurisdiccionRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591